---
title: オフラインリアルタイムどう書く E04 の問題 - ドキドキ登山
date: 2016-06-04 16:00 JST
tags:
---

ruby:
  json = JSON.parse(File.read(File.join(__dir__, "2016-06-04-doukaku-e04/doukaku.json")), symbolize_names: true)

markdown:
  [オフラインリアルタイムどう書く](https://yhpg.doorkeeper.jp) E04 の問題です。

  ## 問題

  次の図は山を上から見たところである。

  ![](2016/06/04/example1.svg)

  A ~ H が登山者、1 ~ 8 は方角、実線が登山道である。

  A ~ H のうち登頂できた人を求めたい。

  ## ルール

  登山には次のルールがある:

  1. 登山道を麓から頂上に向かって登る
  2. 登る際に、横方向の登山道があればそちらを通る

  ただし、一部の登山道は頂上からの落石によって通行止めになっており、通行止めに行きあたると登頂失敗になる。

  落石は、頂上から登山者と同じルールで麓まで転がってくる。

  先述した例 (`2512:C`) だと、通行止めの道は次の図の赤破線のようになる。

  ![](2016/06/04/example2.svg)

  よって、頂上に辿りつけた人は次の図の赤丸のようになる。

  ![](2016/06/04/example3.svg)

  ## 入力

  `2512:C` のような形式。
  コロンの前は頂上と並行に伸びる登山道の情報。頂上から順に並んでいる。
  コロンの後は落石の開始位置。

  ## 出力

  `DEFGH` のような形式。登頂に成功した人をアルファベット順で並べる。

  ## 補足

    実装ができた方は [Qiitaの記事](http://qiita.com/mtsmfm/items/6d9112fcc568908caaba) のコメント欄からリンクを張っていただくと見つけやすくて助かります。

h2 サンプルデータ

table
  thead
    tr
      th #
      th 入力
      th 期待
      th 状況へのリンク

  tbody
    - json.each.with_index do |data, i|
      tr
        td= i
        td= data[:input]
        td= data[:expected]
        td= link_to '状況', '', anchor: data[:input]

h2 テストデータ
textarea= json.map.with_index {|d, i| %!/*#{i}*/ test("#{d[:input]}", "#{d[:expected]}")! }.join("\n")

h2 状況一覧

- json.each do |data, i|
  h3{id= data[:input]}= data[:input]
  img{src=data[:image]}
  hr
